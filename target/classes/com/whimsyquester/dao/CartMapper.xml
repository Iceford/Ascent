<?xml version="1.0" encoding="UTF-8"?>
<!--
* @Description: 将Java接口CartMapper中定义的方法与SQL语句进行映射,实现数据库访问功能
* @FilePath: \src\main\java\com\whimsyquester\dao\CartMapper.xml
* @Author: whimsyquester rongquanhuang01@gmail.com
* @Date: 2023-06-05 11:32:03
* @LastEditors: whimsyquester rongquanhuang01@gmail.com
* @LastEditTime: 2023-06-05 23:01:06
* Copyright (c) 2023 by whimsyquester , All Rights Reserved.
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.whimsyquester.dao.CartMapper"> <!--指定命名空间,用于区分不同的Mapper文件-->

    <!--对应addCart()方法,表示向购物车表中插入一条记录,并将传入的GoodsCart对象的属性值作为插入的值-->
    <insert id="addCart" parameterType="GoodsCart"> INSERT INTO shop_cart (goods_name, goods_unit,
                                                                           goods_price, goods_num, users_id)
                                                    VALUES (#{goods_name}, #{goods_unit}, #{goods_price},
                                                            #{goods_num}, #{users_id}) </insert>


    <!--对应findGetName()方法,表示根据传入的用户ID和商品名称查询购物车表中的记录,并将结果映射为GoodsCart类型的对象-->
    <select id="findGetName" parameterType="map" resultType="GoodsCart"> SELECT *
                                                                         FROM shop_cart
                                                                         WHERE users_id = #{userId}
                                                                           AND goods_name = #{goods_name} </select>


    <!--对应updateByid()方法,表示根据传入的购物车ID更新购物车表中的记录,并将传入的GoodsCart对象的属性值作为更新的值-->
    <update id="updateByid" parameterType="GoodsCart"> UPDATE shop_cart
                                                       SET goods_num = #{goods_num}
                                                       WHERE id = #{id} </update>


    <!--对应findByUserId()方法,表示根据入的用户ID查询购物车表中的记录,并将结果映射为GoodsCart类型的List集合-->
    <select id="findByUserId" parameterType="java.lang.Integer" resultType="GoodsCart"> SELECT *
                                                                                        FROM shop_cart
                                                                                        WHERE users_id = #{id} </select>


    <!--对应delByid()方法,表示根据传入的购物车ID删除购物车表中的记录-->
    <delete id="delByid" parameterType="java.lang.Integer"> DELETE
                                                            FROM shop_cart
                                                            WHERE id = #{id} </delete>


    <!--对应delByIdsArry()方法,表示根据传入的购物车ID数组批量删除购物车表中的记录-->
    <delete id="delByIdsArry" parameterType="String">DELETE FROM shop_cart WHERE id IN
        <foreach
                collection="array" item="id" open="(" separator="," close=")">#{id}
        </foreach>
    </delete>

</mapper>
