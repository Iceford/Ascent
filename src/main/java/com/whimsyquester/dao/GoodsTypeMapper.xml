<?xml version="1.0" encoding="UTF-8"?>
<!--
* @Description: 将Java接口GoodsTypeMapper中定义的方法与SQL语句进行映射,实现数据库访问功能
* @FilePath: \src\main\java\com\whimsyquester\dao\GoodsTypeMapper.xml
* @Author: whimsyquester rongquanhuang01@gmail.com
* @Date: 2023-06-05 11:32:03
* @LastEditors: whimsyquester rongquanhuang01@gmail.com
* @LastEditTime: 2023-06-06 15:13:05
* Copyright (c) 2023 by whimsyquester , All Rights Reserved.
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.whimsyquester.dao.GoodsTypeMapper">    <!--指定命名空间,用于区分不同的Mapper文件-->

    <!--将查询结果集中的列与GoodsTypeCustom类和Goods类中的属性进行映射,方便后续的数据处理-->
    <resultMap type="com.whimsyquester.po.GoodsTypeCustom" id="goodslist">
        <id column="id" property="id" />
        <result column="type_name" property="type_name" />
        <result column="date" property="date" />
        <collection property="lists" ofType="com.whimsyquester.po.Goods">
            <id column="gid" property="id" />
            <result column="goods_name" property="goods_name" />
            <result column="goods_img" property="goods_img" />
            <result column="goods_price" property="goods_price" />
        </collection>
    </resultMap>


    <!--对应goodsIndex()方法,用于查询商品类型信息和商品信息,
        并将查询结果集映射到一个名为"goodslist"的<resultMap>标签中定义的映射关系中,
            方便后续数据处理-->
    <select id="goodsIndex" resultMap="goodslist">
        SELECT t.*,
        g.`goods_name`,
        g.`goods_img`,
        g.`goods_price`,
        g.`id` gid
        FROM shop_type t
        LEFT JOIN shop_goods g ON t.`id` =
        g.`goods_type`
    </select>


    <!--对应admin_del_type()方法,通过传入的参数id确定要删除的商品类型信息-->
    <delete id="admin_del_type" parameterType="java.lang.Integer">
        DELETE
        FROM shop_type
        WHERE id =
        #{id}
    </delete>


    <!--对应AdminaddType()方法,用于向数据库中添加商品类型信息-->
    <insert id="AdminaddType" parameterType="GoodsType">
        INSERT INTO shop_type (type_name, date)
        VALUES (#{type_name}, #{date})
    </insert>


    <!--对应AdminGetIdType()方法,根据商品类型id查询商品类型信息,并将查询结果集射到一个GoodsType对象中,方便后续的数据处理-->
    <select id="AdminGetIdType" parameterType="java.lang.Integer" resultType="GoodsType">
        select *
        from shop_type
        where id = #{id}
    </select>


    <!--对应AdminUpdateType()方法,用于更新商品类型信息-->
    <update id="AdminUpdateType" parameterType="GoodsType">
        UPDATE shop_type
        SET type_name=#{type_name}
        WHERE id = #{id}
    </update>

</mapper>

