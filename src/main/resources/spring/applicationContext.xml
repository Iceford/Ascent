<?xml version="1.0" encoding="UTF-8"?>
<!--
 * @Description: Spring MVC的配置文件,用于配置Spring MVC框架的一些参数和属性
 * @FilePath: \src\main\resources\spring\applicationContext.xml
 * @Author: hhrwvyy5654v huang_rongquan@outlook.com
 * @Date: 2023-06-05 11:32:03
 * @LastEditors: hhrwvyy5654v huang_rongquan@outlook.com
 * @LastEditTime: 2023-06-07 15:04:30
 * Copyright (c) 2023 by hhrwvyy5654v , All Rights Reserved. 
-->


<!-- 
	(1)Spring配置文件的开头,定义了XML命名空间和schemaLocation,使用了以下命名空间
	xmlns:beans：定义了Spring的bean元素，用于定义应用程序中的对象。
	xmlns:context：定义了Spring的context命名空间，用于加载属性文件和其他上下文相关的配置。
	xmlns:xsi：定义了XML Schema实例命名空间，用于指定schemaLocation属性。
	xmlns:aop：定义了Spring的aop命名空间，用于配置面向切面编程。
	xmlns:tx：定义了Spring的tx命名空间，用于配置事务管理。
	xmlns:mvc：定义了Spring的mvc命名空间，用于配置Spring MVC框架。

	(2)使用了xsi:schemaLocation属性来指定每个命名空间的XML Schema文件的位置。
	这些文件通常位于Spring框架的jar包中，但也可以从Spring的官方网站上下载。
	这样做可以帮助Spring验证配置文件的正确性，并提供代码提示和自动完成功能。
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
						http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

	<!-- 用于指定需要扫描的包路径，以便自动扫描并注册Spring MVC的控制器 -->
	<context:component-scan
		base-package="com.ssm.controller"></context:component-scan>

	<!-- 开启Spring MVC的注解驱动功能，可以简化代码，提高开发效率 -->
	<mvc:annotation-driven></mvc:annotation-driven>

	<!-- 用于配置静态资源的访问路径和映射关系,location属性指定了静态资源的存放路径,mapping属性指定了访问该静态资源的URL路径 -->
	<mvc:resources location="/shop-user/" mapping="/shop-user/*.html" />
	<mvc:resources location="/admin/" mapping="/admin/*.html" />
	<mvc:resources location="/admin/" mapping="/admin/**" />
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/images/" mapping="/images/**" />


	<!--用于配置拦截器(拦截器是Spring
	MVC框架中的一种拦截器机制,用于在请求处理前或处理后对请求进行拦截和处理) -->
	<mvc:interceptors>
		<!--使用mvc:interceptor标签定义了一个拦截器,并使用mvc:mapping标签指定了需要拦截的请求路径-->
		<mvc:interceptor>
			<mvc:mapping path="/shop-user/*.html" />
			<mvc:exclude-mapping path="/shop-user/index.html" />
			<mvc:exclude-mapping path="/getGoods.do" />
			<mvc:exclude-mapping path="/shop-user/login.html" />
			<mvc:exclude-mapping path="/login.do" />
			<mvc:exclude-mapping path="/shop-user/register.html" />
			<mvc:exclude-mapping path="/addPlainUsers.do" />
			<!-- 指定拦截器的具体实现类 -->
			<bean class="com.ssm.interceptors.InterceptorCustom"></bean>
		</mvc:interceptor>
	</mvc:interceptors>


	<!-- 用于处理文件上传功能,限制上传文件的大小不超过5MB
	id属性指定了该对象的唯一标识符class属性指定了该对象的具体实现类
	"org.springframework.web.multipart.commons.CommonsMultipartResolver",表示使用Apache Commons
	FileUpload组件来实现文件上传功能
	<property>标签指定了该对象的属性，这里是"maxUploadSize"，表示上传文件的最大大小，单位是字节
	-->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize">
			<value>5242880</value>
		</property>
	</bean>


</beans>